1. Program to multiply two given arrays of same size element-by-element.
2. Program to create an element-wise comparison (greater, greater_equal, lesseer).
3. program to create an array of all the even integers from 30 to 70
4. program to create a 3x3 identity matrix
5. program to create a vector with values from 0 to 20 and change the sign
6. program to create a 5x5 zero matrix with elements on the main diagonal
7. program to compute sum of all elements, sum of each column and sum of each row.
8. program to save a given array to a text file and load it.
9. array.txt
10. program to check whether two arrays are equal (element wise) or not
11.program to create a 4x4 array with random values, now create a new array after swapping first and last row.


1. import numpy as np
num1 = ([[2, 4, 6, 8], [10, 3, 5, 7]])
num2 = ([[3, 4, 6, 9], [2, 4, 7, 19]])
print("First Array: \n")
print(num1)
print("Second Array: \n")
print(num2)

mul = np.multiply(num1, num2)
print("Multiplied Array is: \n")
print(mul)

OT:
First Array: 

[[2, 4, 6, 8], [10, 3, 5, 7]]
Second Array: 

[[3, 4, 6, 9], [2, 4, 7, 19]]
Multiplied Array is: 

[[  6  16  36  72]
 [ 20  12  35 133]]

Process finished with exit code 0


2. import numpy as nm
ar1 = ([2, 9, 1, 5])
ar2 = ([6, 3, 4, 5])
print("Initial Arrays: ")
print(ar1)
print(ar2)

print("Comparison - Greater: ")
gt = nm.greater(ar1, ar2)
print(gt)

print("\nComparison - Greater Equal: ")
gte = nm.greater_equal(ar1, ar2)
print(gte)

print("\nComparison - Lesser: ")
lsr = nm.less(ar1, ar2)
print(lsr)

OT:
Initial Arrays: 
[2, 9, 1, 5]
[6, 3, 4, 5]
Comparison - Greater: 
[False  True False False]

Comparison - Greater Equal: 
[False  True False  True]

Comparison - Lesser: 
[ True False  True False]

Process finished with exit code 0


3. import numpy as np
arr = np.arange(30, 71, 2)
print("Array of all the even integers from 30 to 70: ")
print(arr)

OT:
Array of all the even integers from 30 to 70: 
[30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70]

Process finished with exit code 0


4. import numpy as np
arr = np.identity(3)
print("3x3 Matrix: ")
print(arr)

OT:
3x3 Matrix: 
[[1. 0. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]

Process finished with exit code 0



5. import numpy as np
x = np.arange(21)
print("Original vector: ")
print(x)
print("After changing the sign of the numbers in the range from 9 to 15: ")
x *= -1     #x=x*-1
print(x)

OT:
Original vector:
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20]
After changing the sign of the numbers in the range from 9 to 15:
[  0  -1  -2  -3  -4  -5  -6  -7  -8  -9 -10 -11 -12 -13 -14 -15 -16 -17
 -18 -19 -20]

Process finished with exit code 0



6. import numpy as np
x = np.diag([1, 2, 3, 4, 5])
print(x)

OT:
[[1 0 0 0 0]
 [0 2 0 0 0]
 [0 0 3 0 0]
 [0 0 0 4 0]
 [0 0 0 0 5]]

Process finished with exit code 0



7. import numpy as np
x = np.array([[4, 1], [2, 7]])
print("Initial array: ")
print(x)
print("Sum of all elements: ")
print(np.sum(x))
print("Sum of each column:")
sc = np.sum(x, axis=0)
print(sc)
print("Sum of each row:")
sr = np.sum(x, axis=1)
print(sr)

OT:
Initial array: 
[[4 1]
 [2 7]]
Sum of all elements: 
14
Sum of each column:
[6 8]
Sum of each row:
[5 9]

Process finished with exit code 0



8. import numpy as np
import os
x = np.arange(12).reshape(4, 3)
print("Original array:")
print(x)
header = 'col1 col2 col3'
np.savetxt('temp.txt', x, fmt="%d", header=header) 
print("After loading, content of the text file:")
result = np.loadtxt('temp.txt')
print(result)

OT:
Original array:
[[ 0  1  2]
 [ 3  4  5]
 [ 6  7  8]
 [ 9 10 11]]
After loading, content of the text file:
[[ 0.  1.  2.]
 [ 3.  4.  5.]
 [ 6.  7.  8.]
 [ 9. 10. 11.]]

Process finished with exit code 0



9. import numpy as np
nums1 = np.array([5, 1, 23])
nums2 = np.array([2, 3, 23])
print("Original arrays:")
print(nums1)
print(nums2)
print("\nTest said two arrays are equal (element wise) or not:?")
print(nums1 == nums2)

OT:
Original arrays:
[ 5  1 23]
[ 2  3 23]

Test said two arrays are equal (element wise) or not:?
[False False  True]

Process finished with exit code 0



11. import numpy as np
nums = np.arange(16).reshape(-1, 4)
print("Original array:")
print(nums)
print("\nNew array after swapping first and last rows of the said array:")
nums[[0, -1], :] = nums[[-1, 0], :]
print(nums)

OT:
Original array:
[[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [12 13 14 15]]

New array after swapping first and last rows of the said array:
[[12 13 14 15]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [ 0  1  2  3]]

Process finished with exit code 0
